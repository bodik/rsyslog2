#!/bin/sh

NAME=debian-test.qcow2
if [ -z $NAME ]; then
	echo "RESULT: FAILED $0 no name"
	exit 1
fi
cd /tmp || exit 1



rreturn() {
	RET=$1
	MSG=$2
	if [ $RET -eq 0 ]; then
		echo "RESULT: OK $MSG"
		exit 0
	else
		echo "RESULT: FAILED $MSG"
		exit 1
	fi

	echo "RESULT: FAILED THIS SHOULD NOT HAPPEN $0 $@"
	exit 1
}


vm_destroy() {
	find . -maxdepth 1 -type f -name "${NAME}*" -delete
	rreturn $? "$0 destroy $@"
}

vm_destroy_cache() {
	if [ -d $NAME-cache ]; then
		find $NAME-cache -maxdepth 1 -type f -name "${NAME}*" -delete
		rmdir $NAME-cache
		rreturn $? "$0 destroy_cache $@"
	fi
	rreturn 0 "$0 destroy_cache $@"
}
vm_make_cache() {
	/puppet/jenkins/kvm.init destroy_cache 1>/dev/null 2>/dev/null
	mkdir ${NAME}-cache
	find . -maxdepth 1 -type f -name "${NAME}*" -exec cp {} ${NAME}-cache/ \;
	rreturn $? "$0 make_cache $@"
}


vm_ssh() {
	ssh -i $NAME.id_rsa -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' -o 'ConnectTimeout=5' root@localhost -p 2222 "$1"
	rreturn $? "$0 ssh $@"
}

vm_start() {
	grep xen /sys/hypervisor/properties/capabilities 1>/dev/null 2>/dev/null
	if [ $? -eq 0 ]; then
		VMMOPTS="-no-kvm"
	else
		VMMOPTS=""
	fi
	screen -S $NAME -dm kvm -name $NAME -m 2048 -curses -hda $NAME -redir tcp:2222::22 $VMMOPTS

	RET=1
	for i in `seq 1 60`; do
		/puppet/jenkins/kvm.init ssh /bin/true 1>/dev/null && RET=$? && break 1>/dev/null
		sleep 1
	done
	rreturn $RET "$0 start"
}

vm_status() {
	ps faxu | grep $NAME | grep -v grep
}

vm_shutdown() {
	/puppet/jenkins/kvm.init ssh /bin/true
	if [ $? -ne 0 ]; then
		rreturn $? "shutdown vm not running"
	fi

	echo "INFO: sending halt"
	/puppet/jenkins/kvm.init ssh halt
	if [ $? -ne 0 ]; then
		rreturn $? "shutdown cannot shutdown kvm"
	fi

	RET=1
	for i in `seq 1 60`; do
		/puppet/jenkins/kvm.init ssh /bin/true 1>/dev/null
		if [ $? = 1 ]; then
			rreturn $? "shutdown"
		fi
		sleep 1
	done

	rreturn 1 "shutdown did not finished in time"
}

vm_build() {
	/puppet/jenkins/kvm.init shutdown
	/puppet/jenkins/kvm.init destroy
	if [ ! -f $NAME-cache/$NAME ]; then
		#sudo je tu kvuli jenkinsu, hlavne kvuli tem machrovinkam s qemu-nbd
		sudo qemu-img create -f qcow2 $NAME 8G
		sudo sh /puppet/jenkins/qemu-debian-create-image $NAME debian.localdomain wheezy
		ME=`whoami`
		sudo chown $ME ${NAME}*

		#mkdir ${NAME}-cache
		#find . -maxdepth 1 -type f -name "${NAME}*" -exec cp {} ${NAME}-cache/ \;
		/puppet/jenkins/kvm.init make_cache
	else
		echo "INFO: kvm image already build, using cache"
		find . -maxdepth 1 -type f -name "${NAME}*" -delete
		cp -ar $NAME-cache/* .
		RET=$?
	fi
	rreturn $? "$0"
}

case "$1" in
	build)
		vm_build
	;;
	start)
		vm_start
	;;
	status)
		vm_status
	;;
	shutdown)
		vm_shutdown
	;;
	destroy)
		vm_destroy
	;;
	destroy_cache)
		vm_destroy_cache
	;;
	make_cache)
		vm_make_cache
	;;
	ssh)
		vm_ssh "$2"
	;;
	*)
		rreturn 1 "$0 wrong command"
	;;
esac

