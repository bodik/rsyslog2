#!/bin/sh

if [ -z $VMNAME ]; then
	VMNAME="RS"
fi
cd /tmp || exit 1



rreturn() {
	RET=$1
	MSG=$2
	if [ $RET -eq 0 ]; then
		echo "RESULT: OK $MSG"
		exit 0
	else
		echo "RESULT: FAILED $MSG"
		exit 1
	fi

	echo "RESULT: FAILED THIS SHOULD NOT HAPPEN $0 $@"
	exit 1
}

vm_id() {
	docker ps -a | grep "${VMNAME}$" | tail -n1 | awk '{print $1}'
}


vm_destroy() {
	VMID=$(/puppet/jenkins/bin/docker.init id)
	if [ -z "$VMID" ]; then
		rreturn 1 "docker id not detected"
	fi
	/puppet/jenkins/bin/docker.init shutdown
	docker rm $VMID
	rreturn $? "$0 destroy $@"
}

vm_ssh() {
	VMID=$(/puppet/jenkins/bin/docker.init id)
	if [ -z "$1" ]; then
		docker exec -it $VMID bash
	else
		docker exec -it $VMID "$1"
	fi
	rreturn $? "$0 ssh $@"
}

vm_start() {
	VMID=$(/puppet/jenkins/bin/docker.init id)

	docker ps | grep $VMID
	if [ $? -eq 0 ]; then
		rreturn $? "docker vm already running"
	fi

	docker start $VMNAME
	if [ $? -ne 0 ]; then
		rreturn $? "$0 start failed $VMNAME"
	fi
	#TODO: check up and running
	rreturn 0 "$0 start failed"
}

vm_status() {
	VMID=$(/puppet/jenkins/bin/docker.init id)
	docker ps | grep $VMID
	rreturn $? "$0 status"
}

vm_fixup() {
	echo "not implemented"
}

vm_shutdown() {
	VMID=$(/puppet/jenkins/bin/docker.init id)
	docker stop $VMID
	if [ $? -ne 0 ]; then
		rreturn 1 "shutdown error"
	fi

	rreturn 0 "shutdown ok"
}

vm_build() {

	if [ -z $1 ]; then
		TEMPLATE="apache2-basic"
	else
		TEMPLATE=$1
	fi
	docker create -P --name $VMNAME $TEMPLATE

#	/puppet/jenkins/bin/metacloud.init shutdown
#	/puppet/jenkins/bin/metacloud.init destroy

	sleep 5
	rreturn $? "$0"
}


docker_templates() {
	#
	for all in $(docker images | awk '{print $3}' | grep -v jessie); do
		docker rmi $all
	done
	TMPDIR=$(mktemp -d)

	cd $TMPDIR && git clone https://github.com/bodik/apache2-docker
	cd apache2-docker
	docker build -t apache2-basic .
}

vm_list() {
	if [ "$1" = "-n" ]; then
		docker ps -a | grep -v "^CONTAINER ID" | while read i; do 
			echo -n "$i"
			VMURL=$(docker ps -a | grep  $(echo $i | awk '{print $1}') | rev | awk '{print $3}' | rev | awk -F":" '{print $2}' | awk -F"-" '{print $1}' )
#			VMHNAME=$(host $VMIP 2>/dev/null| grep "domain name pointer" | rev | awk '{print $1}' | rev)
			echo " http://$(facter fqdn):$VMURL"
		done
	else
		docker ps -a | grep -v "^CONTAINER ID"
	fi

}

#used for rsyslog/test02
docker_update() {
	echo "not implemented"
#	for all in $(/puppet/jenkins/bin/docker.init list|grep "R[CS]-"| awk '{print $4}'); do
#		VMNAME=$all /puppet/jenkins/bin/metacloud.init ssh 'cd /puppet && sh bootstrap.install.sh'
#	done
}

all_nodes() {
	CMD=$1

	for all in $( /puppet/jenkins/bin/docker.init list | awk '{print $1}' ); do
                VMNAME=$all /puppet/jenkins/bin/docker.init ssh "$CMD"
	done
	rreturn 0 "$0 all nodes"
}

case "$1" in
	templates)
		docker_templates
	;;
	list)
		vm_list "$2"
	;;
	build)
		vm_build
	;;
	start)
		vm_start "$2"
	;;
	status)
		vm_status
	;;
	shutdown)
		vm_shutdown
	;;
	destroy)
		vm_destroy
	;;
	ssh)
		vm_ssh "$2"
	;;
	node)
		VMNAME=$2 /puppet/jenkins/bin/docker.init ssh "$3"
	;;
	fixup)
		vm_fixup
	;;
	update)
		docker_update
	;;
	an)
		all_nodes "$2"
	;;
	id)
		vm_id
	;;
	*)
		rreturn 1 "$0 wrong command"
	;;
esac

