== Class: warden3::server

Class will ensure installation of warden3 server: apache2, wsgi, server, mysqldb, configuration

=== Parameters

[*install_dir*]
  directory to install w3 server

[*port*]
  port number to listen with apache vhost

[*mysql_... *]
  parameters for mysql database for w3 server

[*avahi_enable*]
  enable service announcement, enabled by default. for testing and debugging purposes

== Class: warden3::ca

Class will ensure installation of warden3 automated ca for testing.
CA is build around simple puppet ca which provides list, sign, revoke. 
Inspired by http://spootnik.org/tech/2013/05/30_neat-trick-using-puppet-as-your-internal-ca.html
init ca, list
 puppet cert --confdir /opt/warden-ca list
generate keys
 puppet cert --confdir /opt/warden-ca generate ${admin}.users.priv.example.com
revoke keys
 puppet cert revoke

TODO: allow changing ca service port

=== Parameters

[*ca_name*]
  ca name

[*autosign*]
  handle signing requests automatically (testing)

== Class: warden3::tester

Class will ensure installation of example warden3 testing client. Tester will generate ammount of idea messages and sends them to w3 server.
Used for testing.

TODO: warden server port selection missing

=== Parameters

[*install_dir*]
  directory to install w3 server

[*warden_server*]
  name or ip of warden server, overrides autodiscovery

[*warden_server_auto*]
  enables warden server autodiscovery

[*warden_server_service*]
  service name to be discovered

== Class: warden3::2rediser

Class will ensure installation of warden3 client which receives new events from server and sends them to rediser for ELK processing

=== Parameters

[*install_dir*]
  directory to install w3 server

[*warden_server*]
  name or ip of warden server, overrides autodiscovery

[*warden_server_auto*]
  enables warden server autodiscovery

[*warden_server_service*]
  service name to be discovered

[*warden_server_port*]
  warden server port number

[*rediser_server*]
  name or ip of rediser

[*rediser_server_auto*]
  enables rediser autodiscovery

[*rediser_server_service*]
  service name to be discovered

[*rediser_server_warden_port*]
  rediser port for warden stream input

== Class: warden3::hostcert

Class will ensure provisioning of SSL certificated used by other w3 components.
If certificate is not present in install_dir, module will generate new key and
request signing it from warden ca service located on warden server

TODO: allow changing ca service port

=== Parameters

[*dest_dir*]
  directory to generate certificate

[*warden_server*]
  name or ip of warden server, overrides autodiscovery

[*warden_server_auto*]
  enables warden server autodiscovery

[*warden_server_service*]
  service name to be discovered

